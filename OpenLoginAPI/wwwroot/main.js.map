{"version":3,"sources":["./src/app/login-details/login-detail-form/login-detail-form.component.ts","./src/app/login-details/login-detail-form/login-detail-form.component.html","./src/environments/environment.ts","./src/app/shared/login-detail.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/shared/login-detail.model.ts","./src/app/login-details/login-details.component.ts","./src/app/login-details/login-details.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWO,MAAM,wBAAwB;IAEnC,YAAmB,OAA2B;QAA3B,YAAO,GAAP,OAAO,CAAoB;IAAI,CAAC;IAEjD,QAAQ;IACR,CAAC;IAED,QAAQ,CAAC,IAAW;QAClB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,SAAS,CAC5B,GAAG,CAAC,EAAE;YACJ,KAAK,CAAC,GAAG,CAAC,CAAC;YACX,mBAAmB;QACrB,CAAC,EACD,GAAG,CAAC,EAAE;YACJ,mBAAmB;YACnB,KAAK,CAAC,GAAG,CAAC,CAAC;QACb,CAAC,CACF;IAEH,CAAC;IAAA,CAAC;;gGAnBO,wBAAwB;wGAAxB,wBAAwB;;QCXrC,yEAAuB;QACnB,0EAAyC;QACrC,yEAAuB;QACnB,yEAAwB;QACpB,uEAA4B;QAAA,oEAAG;QAAA,gEAAK;QAAA,4DAAI;QAAA,8DAAG;QAAA,4DAAI;QACnD,4DAAM;QACV,4DAAM;QAEN,yEAA4B;QACxB,uEAAyB;QAAA,yFAA6B;QAAA,4DAAI;QAE1D,8EAA0E;QAA1C,kSAAY,iBAAc,IAAC;QACvD,0EAAqC;QACjC,iFAC4E;QAAxC,gNAAuC;QAD3E,4DAC4E;QAC5E,uEAAwE;QAC5E,4DAAM;QACN,0EAAqC;QACjC,iFAC4E;QAAxC,gNAAuC;QAD3E,4DAC4E;QAC5E,uEAAoE;QACxE,4DAAM;QACN,2EAAiB;QACb,2EAAsB;QAClB,2EAA6B;QACzB,yEAAO;QACP,wEAAuB;QAAC,yEACxB;QAAA,4DAAQ;QACZ,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEN,2EAAsB;QAClB,8EAAiE;QAAA,mEAAO;QAAA,4DAAS;QACrF,4DAAM;QAEV,4DAAO;QACX,4DAAM;QAEN,2EAA2C;QACvC,qEAAG;QAAA,kEAAM;QAAA,4DAAI;QACb,yEAAmE;QAAA,oEAA8B;QAAC,mFAC1F;QAAA,4DAAI;QACZ,yEAAiE;QAAA,oEAAiC;QAAC,kFAC5F;QAAA,4DAAI;QACf,4DAAM;QAGF,yEAAY;QAAA,gFAAoB;QAAA,4DAAI;QAAA,iEAAI;QACxC,yEAA4C;QAAA,qFAAyB;QAAA,4DAAI;QAEjF,4DAAO;QAGX,4DAAM;;QAxCkD,2DAAuC;QAAvC,kGAAuC;QAKvC,0DAAuC;QAAvC,kGAAuC;;;;;;;;;;;;;;ACnB/F;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACbnE;AAAA;AAAA;AAAA;AAAA;AAAiD;;;AAM1C,MAAM,kBAAkB;IAI3B,YAAoB,IAAe;QAAf,SAAI,GAAJ,IAAI,CAAW;QAF5B,WAAM,GAAE,yCAAyC,CAAC;QAIzD,aAAQ,GAAe,IAAI,+DAAW,EAAE,CAAC;IAFF,CAAC;IAIxC,KAAK;QACH,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAE,CAAC;IACrD,CAAC;;oFAVQ,kBAAkB;qGAAlB,kBAAkB,WAAlB,kBAAkB,mBAFjB,MAAM;;;;;;;;;;;;;;;;;;;ACCb,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,KAAK,CAAC;KACf;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,yEAAuB;QACrB,+EAAuC;QACzC,4DAAM;;;;;;;;;;;;;;ACDN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;AACiC;AACyB;AAE9D;AACW;;AAkB/C,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,EAAE,YANJ;YACP,uEAAa;YACb,oEAAgB;YAChB,0DAAW;YACX,qEAAgB;SACjB;mIAIU,SAAS,mBAblB,2DAAY;QACZ,4FAAqB;QACrB,qHAAwB,aAGxB,uEAAa;QACb,oEAAgB;QAChB,0DAAW;QACX,qEAAgB;;;;;;;;;;;;;ACtBpB;AAAA;AAAO,MAAM,WAAW;IAAxB;QACI,aAAQ,GAAQ,EAAE,CAAC;QACnB,aAAQ,GAAQ,EAAE,CAAC;IACvB,CAAC;CAAA;;;;;;;;;;;;;;;;;;;ACKM,MAAM,qBAAqB;IAEhC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0FALU,qBAAqB;qGAArB,qBAAqB;QCRlC,mFAA+C;;;;;;;;;;;;;;ACC/C;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACPuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { LoginDetailService } from 'src/app/shared/login-detail.service';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-login-detail-form',\n  templateUrl: './login-detail-form.component.html',\n  styles: [\n  ]\n})\nexport class LoginDetailFormComponent implements OnInit {\n\n  constructor(public service: LoginDetailService) { }\n  \n    ngOnInit(): void {\n    }\n  \n    onSubmit(form:NgForm){\n      this.service.Login().subscribe(\n        res =>{\n          alert(res);\n          //console.log(res);\n        },\n        err => {\n          //console.log(err);\n          alert(err);\n        }\n      )\n  \n    };\n  \n}\n","<div class=\"container\">\n    <body class=\"hold-transition login-page\">\n        <div class=\"login-box\">\n            <div class=\"login-logo\">\n                <a href=\"../../index2.html\"><b>Admin</b>LTE</a>\n            </div>\n        </div>\n        <!-- /.login-logo -->\n        <div class=\"login-box-body\">\n            <p class=\"login-box-msg\">Sign in to start your session</p>\n\n            <form novalidate #form=\"ngForm\" (ngSubmit)=\"onSubmit(form)\" method=\"post\">\n                <div class=\"form-group has-feedback\">\n                    <input type=\"text\" class=\"form-control\" placeholder=\"UserName\"\n                    name=\"Username\" #Username=\"ngModel\" [(ngModel)]=\"service.formData.Username\">\n                    <span class=\"glyphicon glyphicon-envelope form-control-feedback\"></span>\n                </div>\n                <div class=\"form-group has-feedback\">\n                    <input type=\"password\" class=\"form-control\" placeholder=\"Password\"\n                    name=\"Password\" #Password=\"ngModel\" [(ngModel)]=\"service.formData.Password\">\n                    <span class=\"glyphicon glyphicon-lock form-control-feedback\"></span>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-xs-8\">\n                        <div class=\"checkbox icheck\">\n                            <label>\n                            <input type=\"checkbox\"> Remember Me\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                <!-- /.col -->\n                <div class=\"col-xs-4\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-block btn-flat\">Sign In</button>\n                </div>\n                <!-- /.col -->\n            </form>\n        </div>\n\n        <div class=\"social-auth-links text-center\">\n            <p>- OR -</p>\n            <a href=\"#\" class=\"btn btn-block btn-social btn-facebook btn-flat\"><i class=\"fa fa-facebook\"></i> Sign in using\n            Facebook</a>\n            <a href=\"#\" class=\"btn btn-block btn-social btn-google btn-flat\"><i class=\"fa fa-google-plus\"></i> Sign in using\n            Google+</a>\n        </div>\n        <!-- /.social-auth-links -->\n\n            <a href=\"#\">I forgot my password</a><br>\n            <a href=\"register.html\" class=\"text-center\">Register a new membership</a>\n\n    </body>\n    <!-- /.login-box-body -->\n\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\nimport {LoginDetail} from './login-detail.model';\nimport {HttpClient} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginDetailService {\n\n  readonly APIUrl =\"https://localhost:44390/api/Login/Login\";\n  \n    constructor(private http:HttpClient) { }\n  \n    formData:LoginDetail = new LoginDetail();\n   \n    Login(){\n      return this.http.post(this.APIUrl, this.formData );\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'App';\n}\n","<div class=\"container\"> \n  <app-login-details></app-login-details>\n</div>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginDetailsComponent } from './login-details/login-details.component';\nimport { LoginDetailFormComponent } from './login-details/login-detail-form/login-detail-form.component';\n\nimport {FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginDetailsComponent,\n    LoginDetailFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class LoginDetail {\n    Username:string='';\n    Password:string='';\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-details',\n  templateUrl: './login-details.component.html',\n  styles: [\n  ]\n})\nexport class LoginDetailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-login-detail-form></app-login-detail-form>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}